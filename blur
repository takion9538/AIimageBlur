필터링
- 영상에서 필요한 정보만을 통과시키고, 원하지 않는 정보를 걸러내는 작업을 말한다.

공간적 필터링
- 영상의 픽셀값을 직접 이용하는 필터링 방법
- 대상 좌표의 픽셀값과 주변 픽셀값을 동시에 적용한다.
- 마스크(MASK = 커널 = window = 템플릿) 연산을 이용한다.
- 마스크의 형태와 값에 따라 필터의 역할이 결정된다.
    (1) 영상 부드럽게 만들기
    (2) 영상 날카롭게 만들기
    (3) 엣지 검출
    (4) 잡음 제거

OpenCV 필터링에서 지원하는 가장자리 픽셀 확장 방법
1. BORDER_CONSTANT : 000abcdefgh000
2. BORDER_REPLICATE : aaabcdefghhhh
3. BORDER_REFLECT_101 : dcbabcdefghgfe (Default)

cv2.filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None)
- src : 입력 영상
- ddepth : 출력 영상 데이터 타입 (opencv 의 자료 구조 (cv2.CV_8U 등), -1 을 지정할 경우 src 와 동일한 타입으로 결정)
- kernel : 필터 마스크의 행렬 (커널의 총 합은 1로, 3x3 의 커널을 만들 때에는 각 원소값을 1/9 로 설정한다.)
- anchor : 고정점의 위치 (필터의 중앙) (-1, -1) 을 사용하면 자동으로 필터 중앙을 고정점으로 사용하겠다고 선언
- delta : 추가적으로 더할 값
- borderType : 가장자리 픽셀 확장 방식
- dst : 출력영상

평균값 필터(Mean filter)
- 영상의 특정 좌표값을 주변 픽셀값들의 산술 평균으로 설정하는 필터이다.
- 픽셀들 간의 그레이스케일 값 변화가 줄어들어 날카로운 엣지가 무뎌지고, 영상에 있는 잡음의 영향이 줄어드는 효과가 있다.
> 마스크의 크기가 커질수록 평균값 필터의 결과가 부드러워진다. (연산량이 매우 커진다.)


언샤프 마스크 필터(Unsharp mask)
- 날카롭지 않은 영상으로, 부드러워진 영상을 이용하여 날카로운 영상을 생성한다.

clip()
배열에서 값을 하한 ~ 상한 값의 법위로 값을 자르는 함수이다.
    np.clip(array, 하한값, 상한값)
    하한값 미만의 값은 모두 하한값으로 바뀐다.
    상한값 이상의 값은 모두 상한값으로 바뀐다.

    arr = np.arange(10)
    # array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)

    np.clip(arr, 2, 7)
    # array(2, 2, 2, 3, 4, 5, 6, 7, 7, 7)

    arr = np.array([[4, 5, 2],
                    [1, 9, 3],
                    [7, 6, 8]])
    np.clip(arr, 2, 7)
    # array([[4, 5, 2],
             [2, 7, 3],
             [7, 6, 7]])

영상의 잡음 제거
- 영상의 픽셀 값에 추가되는 원치 않는 형태의 노이즈

미디언 필터(Median filter)
- 주변 픽셀들의 값들을 정렬하여, 그 중앙값으로 픽셀값을 대체한다.

    48 60 72
    52 99 88
    69 84 92
    (정렬)
    48 52 60 69 72 84 88 92 99
    (중앙값을 선택하여 픽셀값 대체)
    48 52 60
    69 72 84
    88 92 99

    cv2.medianBlur(src, ksize, dst=None)
    ksize : 커널의 크기, 1보다 큰 홀수를 지정한다.

문제
캠을 통해 아래의 기능을 구현한다.
- blur
- edge > unsharp 필터사용
- 스페이스바를 누를 때마다 모드를 변경한다.

양방향 필터링 함수 bilateralFilter()
- 엣지 보전 잡음 제거 필터
- 평균값 필터 또는 가우시안 필터는 엣지 부근에서도 픽셀값을 평탄화하는 단점이 있다.
- 양방향 필터는 기준 픽셀과 이웃 픽셀과의 거리, 픽셀값의 차이를 함께 고려하여 블러링 정도를 조절하는 함수이다. > 이미지의 끄트머리는 블러링을 약하게 하여 이미지의 특징을 살린다.

    cv2.bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None)
    - d : 필터링에 사용될 이웃 픽셀의 거리(지름), -1 을 입력할 경우 sigmaSpace 값에 의해 자동으로 결정된다.
    - sigmaColor : 색 공간에서의 필터의 표준 편차
    - sigmaSpace : 좌표 공간에서의 필터의 표준 편차

Canny()
- 엣지 검출 함수
- 이미지의 엣지만을 리턴한다.

- parameters
    Canny(src, minVal, maxVal)
    - minVal : 최소임계값(임계값이 클수록 엣지가 검출되기 어렵고, 작을수록 엣지가 검출되기 쉽다.)
    - maxVal : 최대임계값

기하학적 변환
- 영상을 구성하는 픽셀의 배치 구조를 변경함으로 전체 영상의 모양을 바꾸는 작업이다. (기울임, 비틀림, 이동 등)
- 디자인적으로 변경을 위해서가 아닌 삐뚤어진 사진 등을 기하학적 변환을 통해 바로잡아 읽어들이기 위해 사용한다.

1. 이동 변환(Translation transformation)
- 가로 또는 세로 방향으로 영상을 특정 크기만큼 이동시키는 변환이다.
- x 축, y 축 방향으로의 이동 변위를 지정한다.

- parameters
    warpAffine(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None)
    - M : 2 x 3 어파인 변환 행렬, 실수형이다.
    - dsize : 결과 영상의 크기로, (w, h) 의 튜플이다. (0, 0) 일 경우 src 와 같은 크기로 설정된다.
    - flags : 보간법이다. 기본값은 cv2.INTER_LINEAR 이다. (보간법 : 축소, 확대에 사용할 연산)
    - borderMode : 가장자리 픽셀의 확장 방식으로, 기본값은 cv2.BORDER_CONSTANT 이다.
    - borderValue : cv2.BORDER_CONSTANT 일 때 사용할 상수의 값이다. (default = 0)